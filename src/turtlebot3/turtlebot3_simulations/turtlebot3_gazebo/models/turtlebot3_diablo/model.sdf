<?xml version="1.0" ?>
<sdf version="1.5">
  <model name="turtlebot3_burger">
    <pose>0.0 0.0 0.0 0.0 0.0 0.0</pose>

    <link name="base_footprint"/>

    <link name="base_link">

      <inertial>
        <pose>0 0 0 0 0 0</pose>
        <inertia>
          <ixx>17</ixx>
          <ixy>0</ixy>
          <ixz>0</ixz>
          <iyy>17</iyy>
          <iyz>0</iyz>
          <izz>40</izz>
        </inertia>
        <mass>20.0</mass>
      </inertial>

      <collision name="base_collision_left">
        <pose>0 0.4 0.05 0 0 0</pose>
        <geometry>
          <box>
            <size>0.4 0.2 0.1</size>
          </box>
        </geometry>
      </collision>

      <collision name="base_collision_center">
        <pose>0 0 0.05 0 0 0</pose>
        <geometry>
          <box>
            <size>0.2 0.6 0.1</size>
          </box>
        </geometry>
      </collision>

      <collision name="base_collision_right">
        <pose>0 -0.4 0.05 0 0 0</pose>
        <geometry>
          <box>
            <size>0.4 0.2 0.1</size>
          </box>
        </geometry>
      </collision>

      <visual name="base_visual_left">
        <pose>0 0.4 0.15 0 0 0</pose>
        <geometry>
          <box>
            <size>0.4 0.2 0.2</size>
          </box>
        </geometry>
      </visual>

      <visual name="base_visual_center">
        <pose>0 0 0.2 0 0 0</pose>
        <geometry>
          <box>
            <size>0.2 0.6 0.4</size>
          </box>
        </geometry>
      </visual>

      <visual name="base_visual_right">
        <pose>0 -0.4 0.15 0 0 0</pose>
        <geometry>
          <box>
            <size>0.4 0.2 0.2</size>
          </box>
        </geometry>
      </visual>
    </link>

    <link name="imu_link">
      <sensor name="tb3_imu" type="imu">
        <always_on>true</always_on>
        <update_rate>50</update_rate>
        <imu>
          <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </z>
          </linear_acceleration>
        </imu>
        <plugin name="turtlebot3_imu" filename="libgazebo_ros_imu_sensor.so">
          <ros>
            <!-- <namespace>/tb3</namespace> -->
            <remapping>~/out:=imu</remapping>
          </ros>
        </plugin>
      </sensor>
    </link>

    <link name="base_scan">
      <inertial>
        <pose>0 0 0.6 0 0 0</pose>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0.000</ixy>
          <ixz>0.000</ixz>
          <iyy>0.001</iyy>
          <iyz>0.000</iyz>
          <izz>0.001</izz>
        </inertia>
        <mass>0.114</mass>
      </inertial>

      <collision name="lidar_sensor_collision">
        <pose>0 0 0.6 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.0508</radius>
            <length>0.055</length>
          </cylinder>
        </geometry>
      </collision>

      <visual name="lidar_sensor_visual">
        <pose>0 0 0.6 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_burger/meshes/lds.dae</uri>
            <scale>0.001 0.001 0.001</scale>
          </mesh>
        </geometry>
      </visual>

      <sensor name="hls_lfcd_lds" type="ray">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <pose>0 0 0.6 0 0 0</pose>
        <update_rate>10</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>720</samples>
              <resolution>1.000000</resolution>
              <min_angle>0.000</min_angle>
              <max_angle>6.280000</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.120000</min>
            <max>4</max>
            <resolution>0.015000</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="turtlebot3_laserscan" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <!-- <namespace>/tb3</namespace> -->
            <remapping>~/out:=scan</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>base_scan</frame_name>
        </plugin>
      </sensor>
    </link>

    <link name="wheel_left_link">

      <inertial>
        <pose>0 0.6 0.25 -1.57 0 0</pose>
        <inertia>
          <ixx>1.8158194e-03</ixx>
          <ixy>-9.3392e-12</ixy>
          <ixz>1.04909e-11</ixz>
          <iyy>3.2922126e-03</iyy>
          <iyz>5.75694e-11</iyz>
          <izz>1.8158194e-03</izz>
        </inertia>
        <mass>2.8498940e-02</mass>
      </inertial>
      <collision name="wheel_left_collision">
        <pose>0 0.6 0.25 -1.57 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.3</radius>
            <length>0.018</length>
          </cylinder>
        </geometry>
        <surface>
          <!-- This friction pamareter don't contain reliable data!! -->
          <friction>
            <ode>
              <mu>100000.0</mu>
              <mu2>100000.0</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+5</kp>
              <kd>1</kd>
              <max_vel>0.01</max_vel>
              <min_depth>0.001</min_depth>
            </ode>
          </contact>
        </surface>
      </collision>
      <visual name="wheel_left_visual">
        <pose>0 0.6 0.25 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_burger/meshes/tire.dae</uri>
            <scale>0.006 0.006 0.006</scale>
          </mesh>
        </geometry>
      </visual>
    </link>

    <link name="wheel_right_link">
      
      <inertial>
        <pose>0 -0.6 0.25 -1.57 0 0</pose>
        <inertia>
          <ixx>1.8158194e-03</ixx>
          <ixy>-9.3392e-12</ixy>
          <ixz>1.04909e-11</ixz>
          <iyy>3.2922126e-03</iyy>
          <iyz>5.75694e-11</iyz>
          <izz>1.8158194e-03</izz>
        </inertia>
        <mass>2.8498940e-02</mass>
      </inertial>
      <collision name="wheel_right_collision">
        <pose>0 -0.6 0.25 -1.57 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.3</radius>
            <length>0.018</length>
          </cylinder>
        </geometry>
        <surface>
          <!-- This friction pamareter don't contain reliable data!! -->
          <friction>
            <ode>
              <mu>100000.0</mu>
              <mu2>100000.0</mu2>
              <fdir1>0 0 0</fdir1>
              <slip1>0.0</slip1>
              <slip2>0.0</slip2>
            </ode>
          </friction>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+5</kp>
              <kd>1</kd>
              <max_vel>0.01</max_vel>
              <min_depth>0.001</min_depth>
            </ode>
          </contact>
        </surface>
      </collision>
      <visual name="wheel_right_visual">
        <pose>0 -0.6 0.25 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://turtlebot3_burger/meshes/tire.dae</uri>
            <scale>0.006 0.006 0.006</scale>
          </mesh>
        </geometry>
      </visual>
    </link>

    <link name='caster_back_link'>
      <pose>-1 0 0.025 -1.57 0 0</pose>
      <inertial>
        <mass>0.005</mass>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0.000</ixy>
          <ixz>0.000</ixz>
          <iyy>0.001</iyy>
          <iyz>0.000</iyz>
          <izz>0.001</izz>
        </inertia>
      </inertial>
      <collision name='collision'>
        <geometry>
          <sphere>
            <radius>0.025</radius>
          </sphere>
        </geometry>
        <surface>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+5</kp>
              <kd>1</kd>
              <max_vel>0.01</max_vel>
              <min_depth>0.001</min_depth>
            </ode>
          </contact>
        </surface>
      </collision>
    </link>

    <link name='caster_front_link'>
      <pose>1 0 0.025 -1.57 0 0</pose>
      <inertial>
        <mass>0.005</mass>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0.000</ixy>
          <ixz>0.000</ixz>
          <iyy>0.001</iyy>
          <iyz>0.000</iyz>
          <izz>0.001</izz>
        </inertia>
      </inertial>
      <collision name='collision'>
        <geometry>
          <sphere>
            <radius>0.025000</radius>
          </sphere>
        </geometry>
        <surface>
          <contact>
            <ode>
              <soft_cfm>0</soft_cfm>
              <soft_erp>0.2</soft_erp>
              <kp>1e+5</kp>
              <kd>1</kd>
              <max_vel>0.01</max_vel>
              <min_depth>0.001</min_depth>
            </ode>
          </contact>
        </surface>
      </collision>
    </link>

    
    <link name="ultrasonic_front_link">
     <gravity>false</gravity>

      <pose>0.10 0.0 0.55 0 0 0</pose> <!-- 距离中心偏前10cm，高度7cm -->
      <sensor name="ultrasonic_front" type="ray">
        <pose>0 0 0 0 0 0</pose>
        <update_rate>10</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>3</samples> <!-- 粗略模拟15°，3个角度点 -->
              <resolution>1</resolution>
              <min_angle>-0.1309</min_angle> <!-- -7.5度 -->
              <max_angle>0.1309</max_angle>  <!-- +7.5度 -->
            </horizontal>
          </scan>
          <range>
            <min>0.02</min>       <!-- 最小探测范围 2cm -->
            <max>2.5</max>        <!-- 最大探测范围 2.5m -->
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="ultrasonic_front_plugin" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=ultrasonic/front</remapping>
          </ros>
          <output_type>sensor_msgs/Range</output_type>
          <frame_name>ultrasonic_front_link</frame_name>
        </plugin>
      </sensor>
    </link>

    <link name="ultrasonic_left_link">
      <gravity>false</gravity>
      <pose>0.0 0.10 0.55 0 0 1.5708</pose> 
      <sensor name="ultrasonic_left" type="ray">
        <pose>0 0 0 0 0 0</pose>
        <update_rate>10</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>3</samples> <!-- 粗略模拟15°，3个角度点 -->
              <resolution>1</resolution>
              <min_angle>-0.1309</min_angle> <!-- -7.5度 -->
              <max_angle>0.1309</max_angle>  <!-- +7.5度 -->
            </horizontal>
          </scan>
          <range>
            <min>0.02</min>       <!-- 最小探测范围 2cm -->
            <max>2.5</max>        <!-- 最大探测范围 2.5m -->
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="ultrasonic_left_plugin" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=ultrasonic/left</remapping>
          </ros>
          <output_type>sensor_msgs/Range</output_type>
          <frame_name>ultrasonic_left_link</frame_name>
        </plugin>
      </sensor>
    </link>

    <link name="ultrasonic_right_link">
      <gravity>false</gravity>
      <pose>0.0 -0.10 0.55 0 0 -1.5708</pose> <!-- 距离中心偏前10cm，高度7cm -->
      <sensor name="ultrasonic_right" type="ray">
        <pose>0 0 0 0 0 0</pose>
        <update_rate>10</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>3</samples> <!-- 粗略模拟15°，3个角度点 -->
              <resolution>1</resolution>
              <min_angle>-0.1309</min_angle> <!-- -7.5度 -->
              <max_angle>0.1309</max_angle>  <!-- +7.5度 -->
            </horizontal>
          </scan>
          <range>
            <min>0.02</min>       <!-- 最小探测范围 2cm -->
            <max>2.5</max>        <!-- 最大探测范围 2.5m -->
            <resolution>0.01</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="ultrasonic_right_plugin" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=ultrasonic/right</remapping>
          </ros>
          <output_type>sensor_msgs/Range</output_type>
          <frame_name>ultrasonic_right_link</frame_name>
        </plugin>
      </sensor>
    </link>


    

    <joint name="base_joint" type="fixed">
      <parent>base_footprint</parent>
      <child>base_link</child>
      <pose>0.0 0.0 0.010 0 0 0</pose>
    </joint>

    <joint name="wheel_left_joint" type="revolute">
      <parent>base_link</parent>
      <child>wheel_left_link</child>
      <pose>0 0.6 0.25 -1.57 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
        <dynamics>
          <damping>2.0</damping>
        </dynamics>
      </axis>
    </joint>

    <joint name="wheel_right_joint" type="revolute">
      <parent>base_link</parent>
      <child>wheel_right_link</child>
      <pose>0 -0.6 0.25 -1.57 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
        <dynamics>
          <damping>2.0</damping>
        </dynamics>
      </axis>
    </joint>

    <joint name='caster_back_joint' type='ball'>
      <parent>base_link</parent>
      <child>caster_back_link</child>
    </joint>

    <joint name="imu_joint" type="fixed">
      <parent>base_link</parent>
      <child>imu_link</child>
      <pose>0 0 0 0 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>

    <joint name="lidar_joint" type="fixed">
      <parent>base_link</parent>
      <child>base_scan</child>
      <pose>0 0 0.6 0 0 0</pose>
      <axis>
        <xyz>0 0 1</xyz>
      </axis>
    </joint>
    
    <joint name="ultrasonic_front_joint" type="fixed">
  <parent>base_link</parent>
  <child>ultrasonic_front_link</child>
</joint>

<joint name="ultrasonic_left_joint" type="fixed">
  <parent>base_link</parent>
  <child>ultrasonic_left_link</child>
</joint>

<joint name="ultrasonic_right_joint" type="fixed">
  <parent>base_link</parent>
  <child>ultrasonic_right_link</child>
</joint>


    <plugin name="turtlebot3_diff_drive" filename="libgazebo_ros_diff_drive.so">

      <ros>
        <!-- <namespace>/tb3</namespace> -->
      </ros>

      <update_rate>20</update_rate>

      <!-- wheels -->
      <left_joint>wheel_left_joint</left_joint>
      <right_joint>wheel_right_joint</right_joint>

      <!-- kinematics -->
      <wheel_separation>1.2</wheel_separation>
      <wheel_diameter>0.3</wheel_diameter>

      <!-- limits -->
      <max_wheel_torque>6.67</max_wheel_torque>
      <max_wheel_acceleration>2.0</max_wheel_acceleration>

      <command_topic>cmd_vel</command_topic>

      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>

      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>

    </plugin>

    <plugin name="turtlebot3_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
        <!-- <namespace>/tb3</namespace> -->
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>20</update_rate>
      <joint_name>wheel_left_joint</joint_name>
      <joint_name>wheel_right_joint</joint_name>
    </plugin>      
  </model>
</sdf>

